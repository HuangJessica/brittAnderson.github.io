---
title: Using Hakyll with Github Pages
author: Britt
tags: hakyll, github
---

** Git Subtree
   I had previously used ~org-publish~ for my experimental[fn:1] static blog. That was fine, but this year's resolution is to use Haskell and not just read about it, so here we are with hakyll, and hakyll has the same challenge that using org-publish did. The website itself lives in a subdirectory, but we want version control to track everything. However, we need master to have our subdirectory as it's root. There are some instructions for doing this with submodules[fn:2], but I had discovered somewhere[fn:3] how to do it with subtrees, and so I publish the recipe here as a reminder for me, and to help any other NOOBs. 
** The how-to
   Let's assume you have hakyll-init working  and that you have just created the example site. First, create your ~.gitignore~ and make sure to not track the ~.stack-work/~ subdirectory if you use stack. That folder gets big, and you will exceed your github pages space limit. 

   Next, and before creating ~master~ do a =git checkout -b hakyll=. You don't have to name the branch hakyll of course. Make whatever initial edits you want, and then do a first commit. 
   
   Now create the master branch [fn:4]with:
   
   #+Begin_src shell
   git subtree split --squash --prefix _site -b master
   #+End_src
   
   At this point you should be able to checkout ~hakyll~, and commit all changes, then 

   #+Begin_src shell
   git subtree push --squash --prefix _site <path to root of your hakyll site directory> master
   #+End_src

   Followed by a simple
   #+BEGIN_SRC shell
   git push --all origin
   #+END_SRC

   Of course, you will have needed to set the upstream and other more typical git requirements. This is just to help you figure out how to get the master branch to start in ~_site~ while having another branch that tracks the files in the hierarchy above it. 



* Footnotes

[fn:4] If you have already created a master branch just back up any files you want and the delete the branch and you will recreate it. Then, if you are already tracking things on github you will have to "reset" the master branch there with: ~git push --force origin master~

[fn:3] Sorry I forget who, would love to give you credit.

[fn:1] By experimental I mean it was a place for me to experiment with using new tools, not that I was discovering anything that anyone else didn't already know.

[fn:2] For example here: [[https://www.stackbuilders.com/news/dr-hakyll-create-a-github-page-with-hakyll-and-circleci][Submodule and Hakyll]]



